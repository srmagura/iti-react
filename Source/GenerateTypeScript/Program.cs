using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using Microsoft.AspNetCore.Mvc;
using MoreLinq;

namespace GenerateTypeScript
{
    // Automatically runs post build
    class Program
    {
        private static readonly string SourceDir =
            Directory.GetParent(AppDomain.CurrentDomain.BaseDirectory).Parent
                .Parent.Parent.FullName;

        private static readonly string TypeScriptDir = Path.Combine(SourceDir, @"Website\Client\Scripts");

        private static readonly string AutoGeneratedMessage = "// Auto-generated by GenerateTypeScript\n";

        /// <summary>
        /// Create an index.ts for the Scripts\Models directory so that it's easier to import models from
        /// other files
        /// </summary>
        private static void GenerateModelsIndex()
        {
            var modelsDir = Path.Combine(TypeScriptDir, @"Models");

            var output = new StringBuilder();
            output.Append(AutoGeneratedMessage);

            foreach (var path in Directory.EnumerateFiles(modelsDir, "*.ts", SearchOption.AllDirectories))
            {
                if (path.Contains("index.ts")) continue;

                var noExtension = Path.GetFileNameWithoutExtension(path);
                output.Append($"export * from './{noExtension}';\n");
            }

            var outputPath = Path.Combine(modelsDir, "index.ts");
            File.WriteAllText(outputPath, output.ToString());
            PrintWrittenMessage(outputPath);
        }

        private static void PrintWrittenMessage(string path)
        {
            Console.WriteLine($"Wrote file {Path.GetFileName(path)}");
        }

        public static void Main()
        {
            try
            {
                GenerateModelsIndex();
            }
            catch (Exception e)
            {
                Console.WriteLine("GenerateTypeScript failed with error: " + e.Message);
            }
        }
    }
}
